<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="8" time="0.640" timestamp="2025-03-05T17:31:06.782237+01:00" hostname="21310-1445"><testcase classname="test.test_age.TestCheckAge" name="test_check_age[70-Local-Senior Local]" file="test/test_age.py" line="14" time="0.002" /><testcase classname="test.test_age.TestCheckAge" name="test_check_age[30-Local-Adult Local]" file="test/test_age.py" line="14" time="0.001" /><testcase classname="test.test_age.TestCheckAge" name="test_check_age[16-Local-Minor]" file="test/test_age.py" line="14" time="0.000" /><testcase classname="test.test_age.TestCheckAge" name="test_check_age[70-Foreigner-Senior Foreigner]" file="test/test_age.py" line="14" time="0.000" /><testcase classname="test.test_age.TestCheckAge" name="test_check_age[30-Foreigner-Adult Foreigner]" file="test/test_age.py" line="14" time="0.000" /><testcase classname="test.test_height.TestCheckHeight" name="test_average" file="test/test_height.py" line="17" time="0.000" /><testcase classname="test.test_population.TestCheckPopulation" name="test_population[Spain-expected_response0]" file="test/test_population.py" line="19" time="0.101"><failure message="Failed: Timeout &gt;0.1s">self = &lt;test.test_population.TestCheckPopulation object at 0x7f0eeaf9a570&gt;
mock_get = &lt;MagicMock name='get' id='139702048504480'&gt;, country = 'Spain'
expected_response = ResponseObject(status_code=200, message='Success')

    @pytest.mark.only
    @pytest.mark.timeout(_TIMEOUT)
    @patch('src.checkers.requests.get')
    @pytest.mark.parametrize(
        "country, expected_response",
        [
            ('Spain', ResponseObject(status_code=200, message='Success')),
            ('Finland', ResponseObject(status_code=500, message='Error'))
        ]
    )
    def test_population(self, mock_get, country, expected_response):
&gt;       time.sleep(0.2)
E       Failed: Timeout &gt;0.1s

test/test_population.py:31: Failed</failure></testcase><testcase classname="test.test_population.TestCheckPopulation" name="test_population[Finland-expected_response1]" file="test/test_population.py" line="19" time="0.100"><failure message="Failed: Timeout &gt;0.1s">self = &lt;test.test_population.TestCheckPopulation object at 0x7f0eeaf9a4e0&gt;
mock_get = &lt;MagicMock name='get' id='139702048904240'&gt;, country = 'Finland'
expected_response = ResponseObject(status_code=500, message='Error')

    @pytest.mark.only
    @pytest.mark.timeout(_TIMEOUT)
    @patch('src.checkers.requests.get')
    @pytest.mark.parametrize(
        "country, expected_response",
        [
            ('Spain', ResponseObject(status_code=200, message='Success')),
            ('Finland', ResponseObject(status_code=500, message='Error'))
        ]
    )
    def test_population(self, mock_get, country, expected_response):
&gt;       time.sleep(0.2)
E       Failed: Timeout &gt;0.1s

test/test_population.py:31: Failed</failure></testcase></testsuite></testsuites>